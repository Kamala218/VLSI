module SeqCheck (
    input wire clk,
    input wire rst,
    input wire in_signal,
    output reg flag
);
    reg [2:0] edge_count;
    reg prev_signal;
    integer cycles;

    always @(posedge clk or posedge rst) begin
        if (rst) begin
            flag <= 0;
            edge_count <= 0;
            cycles <= 0;
            prev_signal <= 0;
        end else begin
            prev_signal <= in_signal;

            if (~prev_signal & in_signal) // rising edge
                edge_count <= edge_count + 1;

            cycles <= cycles + 1;

            if (edge_count == 3 && cycles <= 5) begin
                flag <= 1;
                edge_count <= 0;
                cycles <= 0;
            end else
                flag <= 0;

            if (cycles > 5) begin
                cycles <= 0;
                edge_count <= 0;
            end
        end
    end
endmodule
