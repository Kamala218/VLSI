// bit_balancer_tb.v
`timescale 1ns / 1ps

module bit_balancer_tb;

  // Signals
  reg [7:0] in_data;
  reg clk, rst;
  wire [3:0] count;

  // Instantiate DUT
  BitBalancer dut (
    .in_data(in_data),
    .clk(clk),
    .rst(rst),
    .count(count)
  );

  // Clock generation: 10ns period
  initial begin
    clk = 0;
    forever #5 clk = ~clk;
  end

  // Stimulus: reset and inputs
  initial begin
    // Initial conditions
    rst = 1;
    in_data = 8'b0000_0000;
    #20;
    rst = 0;

    // Test a series of inputs
    in_data = 8'b0000_0000; #10;
    in_data = 8'b1111_1111; #10;
    in_data = 8'b1010_1010; #10;
    in_data = 8'b0101_0101; #10;
    in_data = 8'b1000_0001; #10;
    in_data = 8'b1100_0011; #10;

    // Finish simulation
    #20;
    $finish;
  end

  // Monitor signals on clock edges
  initial begin
    $display("Time   rst in_data  count");
    $monitor("%0dns   %b   %b   %b", $time, rst, in_data, count);
  end

endmodule

